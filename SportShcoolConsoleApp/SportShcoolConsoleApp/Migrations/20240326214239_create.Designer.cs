// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SportShcoolConsoleApp.Db;

namespace SportShcoolConsoleApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240326214239_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SportShcoolConsoleApp.Db.CoachingStaff", b =>
                {
                    b.Property<int>("CoachingStaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Fullname")
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.HasKey("CoachingStaffId");

                    b.ToTable("coachingStaffs");
                });

            modelBuilder.Entity("SportShcoolConsoleApp.Db.HospitalCard", b =>
                {
                    b.Property<int>("HospitalCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AddmissionToCompetitions")
                        .HasColumnType("text");

                    b.Property<string>("Deseases")
                        .HasColumnType("text");

                    b.Property<string>("Fullname")
                        .HasColumnType("text");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("HospitalCardId");

                    b.HasIndex("StudentId");

                    b.ToTable("hospitalCards");
                });

            modelBuilder.Entity("SportShcoolConsoleApp.Db.KindOfSport", b =>
                {
                    b.Property<int>("KindOfSportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Fullname")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("KindOfSportId");

                    b.ToTable("kindOfSports");
                });

            modelBuilder.Entity("SportShcoolConsoleApp.Db.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Achievements")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("CoachingStaffId")
                        .HasColumnType("integer");

                    b.Property<string>("Fullname")
                        .HasColumnType("text");

                    b.Property<int>("KindOfSportId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.HasKey("StudentId");

                    b.HasIndex("CoachingStaffId");

                    b.HasIndex("KindOfSportId");

                    b.ToTable("students");
                });

            modelBuilder.Entity("SportShcoolConsoleApp.Db.HospitalCard", b =>
                {
                    b.HasOne("SportShcoolConsoleApp.Db.Student", "Student")
                        .WithMany("HospitalCards")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SportShcoolConsoleApp.Db.Student", b =>
                {
                    b.HasOne("SportShcoolConsoleApp.Db.CoachingStaff", "CoachingStaff")
                        .WithMany("Students")
                        .HasForeignKey("CoachingStaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportShcoolConsoleApp.Db.KindOfSport", "KindOfSport")
                        .WithMany("Students")
                        .HasForeignKey("KindOfSportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoachingStaff");

                    b.Navigation("KindOfSport");
                });

            modelBuilder.Entity("SportShcoolConsoleApp.Db.CoachingStaff", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SportShcoolConsoleApp.Db.KindOfSport", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SportShcoolConsoleApp.Db.Student", b =>
                {
                    b.Navigation("HospitalCards");
                });
#pragma warning restore 612, 618
        }
    }
}
